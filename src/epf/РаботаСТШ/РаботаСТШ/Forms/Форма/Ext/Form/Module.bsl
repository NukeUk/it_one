
&НаКлиенте
Процедура ПутьКДаннымНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла  = "";
	//Фильтр = "Excel(*.xlsx)|*.xls";
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок   = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		фПуть = ДиалогОткрытияФайла.ПолноеИмяФайла;
		Объект.ПутькДанным = фПуть;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ДвоичныеДанные = Новый ДвоичныеДанные(Объект.ПутькДанным);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);	
	ЗагрузитьНаСервере(АдресВременногоХранилища);
	//ЗагрузитьНаСервере();                  
	Объект.ТШ.Очистить();
	СоответствиеКолонок = новый Соответствие;
	НомерСтолбца = 1;
	Пока НомерСтолбца < 100 Цикл
		Если ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "ФИО" Тогда
			СоответствиеКолонок.Вставить("ФИО",НомерСтолбца);	
		ИначеЕсли ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "GUID TRM SE Project" Тогда
			СоответствиеКолонок.Вставить("ИдентификаторПроекта",НомерСтолбца);	
		ИначеЕсли ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "Месяц" Тогда 
			СоответствиеКолонок.Вставить("Период",НомерСтолбца);	
		ИначеЕсли ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "% распределения часов" Тогда
			СоответствиеКолонок.Вставить("ПроцентРаспределения",НомерСтолбца);
		ИначеЕсли ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "TRM SE Project" Тогда 
			СоответствиеКолонок.Вставить("Проект",НомерСтолбца);
		ИначеЕсли ТабличныйДок.Область("R1C" + НомерСтолбца).Текст = "Тип выставления счетов" Тогда 
			СоответствиеКолонок.Вставить("ТипВыставленияСчета",НомерСтолбца);
		КонецЕсли;
		НомерСтолбца = НомерСтолбца + 1; 
	КонецЦикла;
	
	НомерСтр = 2; 
	Пока НомерСтр <> 100 Цикл
		
		Если ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("ФИО")).Текст = "" Тогда 
			НомерСтр = 100;
		Иначе 
			стр = Объект.ТШ.Добавить();
			Объект.ТШ[НомерСтр-2].ФИО 					= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("ФИО")).Текст;
			Объект.ТШ[НомерСтр-2].Период 				= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("Период")).Текст;
			Объект.ТШ[НомерСтр-2].Проект 				= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("Проект")).Текст;
			Объект.ТШ[НомерСтр-2].ИдентификаторПроекта 	= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("ИдентификаторПроекта")).Текст;
			Объект.ТШ[НомерСтр-2].ТипВыставленияСчета 	= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("ТипВыставленияСчета")).Текст;
			Объект.ТШ[НомерСтр-2].ПроцентРаспределения 	= ТабличныйДок.Область("R" + Строка(НомерСтр) + "C" + СоответствиеКолонок.Получить("ПроцентРаспределения")).Текст; 
			НомерСтр = НомерСтр + 1; 
			
		КонецЕсли;
		
	КонецЦикла;
	ДозаполнитьНаСервере();
	ЗаполнитьСоответствие();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере(АдресВременногоХранилища)
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("xlsx");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ДвоичныеДанные.Записать(ВременныйФайл);
	
	ТабличныйДок.Прочитать(ВременныйФайл);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСоответствие()
	ЗаполнитьСоответствиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоответствиеНаСервере()
	СписокСотрудников = ПолучитьСписокСотрудников();	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	данные.фио КАК фио,
	               |	данные.Проект КАК Проект,
	               |	данные.Период КАК Период,
	               |	данные.ПроцентРаспределения КАК ПроцентРаспределения,
	               |	данные.ИдентификаторПроекта КАК ИдентификаторПроекта,
	               |	данные.ТипВыставленияСчета КАК ТипВыставленияСчета,
	               |	данные.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	данные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	               |ПОМЕСТИТЬ вт_данные
	               |ИЗ
	               |	&данные КАК данные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК Сотрудник,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК НачисленнаяАмортизация,
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт3 КАК СубконтоДт3,
	               |	ХозрасчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение,
	               |	ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	               |	ХозрасчетныйОборотыДтКт.СуммаНУОборотДт КАК СуммаНУ,
	               |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт КАК СуммаПР,
	               |	ХозрасчетныйОборотыДтКт.СуммаВРОборотДт КАК СуммаВР
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, , , , счеткт = &счет0201, &ОсновныеСредства, ) КАК ХозрасчетныйОборотыДтКт
	               |			ПО МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ХозрасчетныйОборотыДтКт.СубконтоКт1
	               |		ПО (МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ = ФизическиеЛица.Ссылка)
	               |ГДЕ
	               |	ФизическиеЛица.Ссылка В
	               |			(ВЫБРАТЬ
	               |				данные.ФизическоеЛицо
	               |			ИЗ
	               |				ВТ_данные КАК данные)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КадроваяИсторияСотрудниковИнтервальный.Сотрудник КАК Сотрудник,
	               |	КадроваяИсторияСотрудниковИнтервальный.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	КадроваяИсторияСотрудниковИнтервальный.ДатаНачала КАК ДатаНачала,
	               |	КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания КАК ДатаОкончания,
	               |	КадроваяИсторияСотрудниковИнтервальный.Организация КАК Организация,
	               |	КадроваяИсторияСотрудниковИнтервальный.Должность КАК Должность,
	               |	КадроваяИсторияСотрудниковИнтервальный.Подразделение КАК Подразделение,
	               |	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1 КАК КоличествоДнейВПериоде,
	               |	ВЫБОР
	               |		КОГДА НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ) < НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ)
	               |			ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ВЫБОР
	               |							КОГДА КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания <= &конецПериода
	               |								ТОГДА КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания
	               |							ИНАЧЕ &КонецПериода
	               |						КОНЕЦ, ДЕНЬ), ДЕНЬ) + 1
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания, ДЕНЬ) < НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |					ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ), НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания, ДЕНЬ), ДЕНЬ) + 1
	               |				ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ), НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ДнейВТеченииЗаписи,
	               |	ВЫРАЗИТЬ(ВЫБОР
	               |			КОГДА НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ) < НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ)
	               |				ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ВЫБОР
	               |								КОГДА КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания <= &конецПериода
	               |									ТОГДА КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания
	               |								ИНАЧЕ &КонецПериода
	               |							КОНЕЦ, ДЕНЬ), ДЕНЬ) + 1
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания, ДЕНЬ) < НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |						ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ), НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания, ДЕНЬ), ДЕНЬ) + 1
	               |					ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КадроваяИсторияСотрудниковИнтервальный.ДатаНачала, ДЕНЬ), НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1
	               |				КОНЕЦ
	               |		КОНЕЦ / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1) КАК ЧИСЛО(15, 2)) КАК Коэфициент
	               |ПОМЕСТИТЬ ВТ_РаспределениеПоКадровойИстории
	               |ИЗ
	               |	РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
	               |ГДЕ
	               |	КадроваяИсторияСотрудниковИнтервальный.ДатаНачала <= &КонецПериода
	               |	И КадроваяИсторияСотрудниковИнтервальный.ДатаОкончания >= &НачалоПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РаспределениеПоКадровойИстории.Сотрудник КАК Сотрудник,
	               |	СУММА(ВТ_РаспределениеПоКадровойИстории.Коэфициент) КАК Коэфициент
	               |ПОМЕСТИТЬ ВТ_РаспределеноПоКадровойИстории
	               |ИЗ
	               |	ВТ_РаспределениеПоКадровойИстории КАК ВТ_РаспределениеПоКадровойИстории
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_РаспределениеПоКадровойИстории.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РаспределениеПоКадровойИстории.Сотрудник КАК Сотрудник,
	               |	ВТ_РаспределениеПоКадровойИстории.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВТ_РаспределениеПоКадровойИстории.ДатаНачала КАК ДатаНачала,
	               |	ВТ_РаспределениеПоКадровойИстории.ДатаОкончания КАК ДатаОкончания,
	               |	ВТ_РаспределениеПоКадровойИстории.Организация КАК Организация,
	               |	ВТ_РаспределениеПоКадровойИстории.Должность КАК Должность,
	               |	ВТ_РаспределениеПоКадровойИстории.Подразделение КАК Подразделение,
	               |	ВТ_РаспределениеПоКадровойИстории.КоличествоДнейВПериоде КАК КоличествоДнейВПериоде,
	               |	ВТ_РаспределениеПоКадровойИстории.ДнейВТеченииЗаписи КАК ДнейВТеченииЗаписи,
	               |	ВТ_РаспределениеПоКадровойИстории.Коэфициент КАК Коэфициент,
	               |	1 - ВТ_РаспределеноПоКадровойИстории.Коэфициент КАК Ошибка
	               |ПОМЕСТИТЬ ВТ_ПодразделенияМОЛов
	               |ИЗ
	               |	ВТ_РаспределениеПоКадровойИстории КАК ВТ_РаспределениеПоКадровойИстории
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаспределеноПоКадровойИстории КАК ВТ_РаспределеноПоКадровойИстории
	               |		ПО ВТ_РаспределениеПоКадровойИстории.Сотрудник = ВТ_РаспределеноПоКадровойИстории.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	""Первый"" КАК ссылка,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ,
	               |	&НачалоПериода КАК НачалоПериода,
	               |	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(ПеремещениеОСОС.Ссылка.Дата, ДЕНЬ), ЕСТЬNULL(СписаниеОСОС.Ссылка.Дата, &КонецПериода))) КАК КонецПериода
	               |ПОМЕСТИТЬ вт_осПоступление
	               |ИЗ
	               |	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&НачалоПериода, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	               |		ПО МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПеремещениеОСОС.ОсновноеСредство
	               |			И МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ = ПеремещениеОСОС.Ссылка.МОЛОрганизации
	               |			И (ПеремещениеОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&началоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ОС КАК СписаниеОСОС
	               |		ПО МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СписаниеОСОС.ОсновноеСредство
	               |			И (СписаниеОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&началоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(&НачалоПериода, ) КАК СостоянияОСОрганизацийСрезПоследних
	               |		ПО МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	               |ГДЕ
	               |	СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПринятиеКУчетуОСОС.Ссылка,
	               |	ПринятиеКУчетуОСОС.ОсновноеСредство,
	               |	ПринятиеКУчетуОСОС.Ссылка.МОЛБУ,
	               |	НАЧАЛОПЕРИОДА(ПринятиеКУчетуОСОС.Ссылка.Дата, ДЕНЬ),
	               |	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(ПеремещениеОСОС.Ссылка.Дата, ДЕНЬ), &КонецПериода))
	               |ИЗ
	               |	Документ.ПринятиеКУчетуОС.ОС КАК ПринятиеКУчетуОСОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	               |		ПО ПринятиеКУчетуОСОС.ОсновноеСредство = ПеремещениеОСОС.ОсновноеСредство
	               |			И ПринятиеКУчетуОСОС.Ссылка.МОЛБУ = ПеремещениеОСОС.Ссылка.МОЛОрганизации
	               |			И (ПеремещениеОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&началоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ПринятиеКУчетуОСОС.Ссылка.Дата, ДЕНЬ) >= &НачалоПериода
	               |	И КОНЕЦПЕРИОДА(ПринятиеКУчетуОСОС.Ссылка.Дата, ДЕНЬ) <= &КонецПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПринятиеКУчетуОСОС.Ссылка,
	               |	ПринятиеКУчетуОСОС.ОсновноеСредство,
	               |	ПринятиеКУчетуОСОС.Ссылка.МОЛБУ,
	               |	НАЧАЛОПЕРИОДА(ПринятиеКУчетуОСОС.Ссылка.Дата, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_осПоступление.ссылка КАК Ссылка,
	               |	вт_осПоступление.ОсновноеСредство КАК основноеСредство,
	               |	вт_осПоступление.МОЛ КАК МОЛ,
	               |	вт_осПоступление.НачалоПериода КАК НачалоПериода,
	               |	вт_осПоступление.КонецПериода КАК КонецПериода
	               |ПОМЕСТИТЬ вт_ос
	               |ИЗ
	               |	вт_осПоступление КАК вт_осПоступление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПолучениеОС.Ссылка,
	               |	ПолучениеОС.ОсновноеСредство,
	               |	ПолучениеОС.Ссылка.МОЛПолучатель,
	               |	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПолучениеОС.Ссылка.Дата, ДЕНЬ), ДЕНЬ, 1),
	               |	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(СдачаОС.Ссылка.Дата, ДЕНЬ), ЕСТЬNULL(КОНЕЦПЕРИОДА(СписаниеОСОС.Ссылка.Дата, ДЕНЬ), &КонецПериода)))
	               |ИЗ
	               |	Документ.ПеремещениеОС.ОС КАК ПолучениеОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.ОС КАК СдачаОС
	               |		ПО ПолучениеОС.ОсновноеСредство = СдачаОС.ОсновноеСредство
	               |			И ПолучениеОС.Ссылка.МОЛПолучатель = СдачаОС.Ссылка.МОЛОрганизации
	               |			И (СдачаОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ОС КАК СписаниеОСОС
	               |		ПО ПолучениеОС.ОсновноеСредство = СписаниеОСОС.ОсновноеСредство
	               |			И (СписаниеОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |ГДЕ
	               |	ПолучениеОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |	И ПолучениеОС.Ссылка.Дата < ЕСТЬNULL(СдачаОС.Ссылка.Дата, КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПолучениеОС.Ссылка,
	               |	ПолучениеОС.ОсновноеСредство,
	               |	ПолучениеОС.Ссылка.МОЛПолучатель,
	               |	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПолучениеОС.Ссылка.Дата, ДЕНЬ), ДЕНЬ, 1)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_ос.основноеСредство КАК ОсновноеСредство,
	               |	вт_ос.МОЛ КАК МОЛ,
	               |	вт_ос.НачалоПериода КАК НачалоПериода,
	               |	вт_ос.КонецПериода КАК КонецПериода
	               |ПОМЕСТИТЬ Вт_Финал
	               |ИЗ
	               |	вт_ос КАК вт_ос
	               |ГДЕ
	               |	вт_ос.НачалоПериода <= &КонецПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_ос.основноеСредство,
	               |	вт_ос.МОЛ,
	               |	вт_ос.НачалоПериода,
	               |	вт_ос.КонецПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СписаниеОСОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	СписаниеОСОС.Ссылка.Дата КАК ДатаСписания
	               |ПОМЕСТИТЬ вт_списанныеОС
	               |ИЗ
	               |	Документ.СписаниеОС.ОС КАК СписаниеОСОС
	               |ГДЕ
	               |	СписаниеОСОС.Ссылка.Проведен
	               |	И СписаниеОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&началоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПринятиеКУчетуОСОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	ПринятиеКУчетуОСОС.Ссылка.Дата КАК ДатаПоступления
	               |ПОМЕСТИТЬ вт_поступившиеОС
	               |ИЗ
	               |	Документ.ПринятиеКУчетуОС.ОС КАК ПринятиеКУчетуОСОС
	               |ГДЕ
	               |	ПринятиеКУчетуОСОС.Ссылка.Проведен
	               |	И ПринятиеКУчетуОСОС.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Финал.ОсновноеСредство КАК ОсновноеСредство,
	               |	Вт_Финал.МОЛ КАК МОЛ,
	               |	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1 КАК ДнейЗаПериод,
	               |	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Вт_Финал.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(Вт_Финал.КонецПериода, ДЕНЬ), ДЕНЬ) + 1 КАК ПериодВладенияВДнях,
	               |	Вт_Финал.НачалоПериода КАК НачалоПериода,
	               |	Вт_Финал.КонецПериода КАК КонецПериода,
	               |	(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Вт_Финал.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(Вт_Финал.КонецПериода, ДЕНЬ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ЕСТЬNULL(вт_поступившиеОС.ДатаПоступления, &НачалоПериода), ДЕНЬ), НАЧАЛОПЕРИОДА(ЕСТЬNULL(вт_списанныеОС.ДатаСписания, &КонецПериода), ДЕНЬ), ДЕНЬ) + 1) КАК коэфициент
	               |ПОМЕСТИТЬ ВТ_ПеремещенияОС
	               |ИЗ
	               |	Вт_Финал КАК Вт_Финал
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_списанныеОС КАК вт_списанныеОС
	               |		ПО Вт_Финал.ОсновноеСредство = вт_списанныеОС.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_поступившиеОС КАК вт_поступившиеОС
	               |		ПО Вт_Финал.ОсновноеСредство = вт_поступившиеОС.ОсновноеСредство
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Амортизация.Сотрудник КАК Сотрудник,
	               |	ВТ_Амортизация.ОсновноеСредство КАК ОсновноеСредство,
	               |	ВТ_Амортизация.НачисленнаяАмортизация КАК НачисленнаяАмортизация,
	               |	ВТ_Амортизация.СчетДт КАК СчетДт,
	               |	ВТ_Амортизация.СубконтоДт1 КАК СубконтоДт1,
	               |	ВТ_Амортизация.СубконтоДт2 КАК СубконтоДт2,
	               |	ВТ_Амортизация.СубконтоДт3 КАК СубконтоДт3,
	               |	ВТ_Амортизация.Организация КАК Организация,
	               |	вт_данные.ПроцентРаспределения КАК ПроцентПоНГ,
	               |	вт_данные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	               |	ВТ_Амортизация.СуммаНУ КАК СуммаНУ,
	               |	ВТ_Амортизация.СуммаПР КАК СуммаПР,
	               |	ВТ_Амортизация.СуммаВР КАК СуммаВР,
	               |	ВТ_ПодразделенияМОЛов.Подразделение КАК Подразделение,
	               |	ВТ_ПодразделенияМОЛов.Коэфициент КАК КоэфициентПоПодразделению,
	               |	ВТ_ПеремещенияОС.МОЛ КАК МОЛ,
	               |	ВТ_ПеремещенияОС.коэфициент КАК коэфициентПоМОЛ,
	               |	ВЫРАЗИТЬ(ВТ_Амортизация.НачисленнаяАмортизация * ВТ_ПодразделенияМОЛов.Коэфициент * ВТ_ПеремещенияОС.коэфициент * (вт_данные.ПроцентРаспределения / 100) КАК ЧИСЛО(15, 2)) КАК СуммаКНачислению,
	               |	ВЫРАЗИТЬ(ВТ_Амортизация.СуммаНУ * ВТ_ПодразделенияМОЛов.Коэфициент * ВТ_ПеремещенияОС.коэфициент * (вт_данные.ПроцентРаспределения / 100) КАК ЧИСЛО(15, 2)) КАК СуммаКНачислениюНУ,
	               |	ВЫРАЗИТЬ(ВТ_Амортизация.СуммаПР * ВТ_ПодразделенияМОЛов.Коэфициент * ВТ_ПеремещенияОС.коэфициент * (вт_данные.ПроцентРаспределения / 100) КАК ЧИСЛО(15, 2)) КАК СуммаКНачислениюПР
	               |ПОМЕСТИТЬ вт_распределениеФинальное
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_данные КАК вт_данные
	               |		ПО ВТ_Амортизация.Сотрудник = вт_данные.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодразделенияМОЛов КАК ВТ_ПодразделенияМОЛов
	               |		ПО ВТ_Амортизация.Сотрудник = ВТ_ПодразделенияМОЛов.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПеремещенияОС КАК ВТ_ПеремещенияОС
	               |		ПО ВТ_Амортизация.ОсновноеСредство = ВТ_ПеремещенияОС.ОсновноеСредство
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_распределениеФинальное.ОсновноеСредство КАК ОсновноеСредство,
	               |	СУММА(вт_распределениеФинальное.СуммаКНачислению) КАК СуммаКНачислению,
	               |	СУММА(вт_распределениеФинальное.СуммаКНачислениюНУ) КАК СуммаКНачислениюНУ,
	               |	СУММА(вт_распределениеФинальное.СуммаКНачислениюПР) КАК СуммаКНачислениюПР
	               |ПОМЕСТИТЬ вт_распределеноИтого
	               |ИЗ
	               |	вт_распределениеФинальное КАК вт_распределениеФинальное
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_распределениеФинальное.ОсновноеСредство
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_распределениеФинальное.Сотрудник КАК Сотрудник,
	               |	вт_распределениеФинальное.ОсновноеСредство КАК ОсновноеСредство,
	               |	вт_распределениеФинальное.НачисленнаяАмортизация КАК НачисленнаяАмортизация,
	               |	вт_распределениеФинальное.СчетДт КАК СчетДт,
	               |	вт_распределениеФинальное.СубконтоДт1 КАК СубконтоДт1,
	               |	вт_распределениеФинальное.СубконтоДт2 КАК СубконтоДт2,
	               |	вт_распределениеФинальное.СубконтоДт3 КАК СубконтоДт3,
	               |	вт_распределениеФинальное.Организация КАК Организация,
	               |	вт_распределениеФинальное.ПроцентПоНГ КАК ПроцентПоНГ,
	               |	вт_распределениеФинальное.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	               |	вт_распределениеФинальное.СуммаНУ КАК СуммаНУ,
	               |	вт_распределениеФинальное.СуммаПР КАК СуммаПР,
	               |	вт_распределениеФинальное.СуммаВР КАК СуммаВР,
	               |	вт_распределениеФинальное.Подразделение КАК Подразделение,
	               |	вт_распределениеФинальное.КоэфициентПоПодразделению КАК КоэфициентПоПодразделению,
	               |	вт_распределениеФинальное.МОЛ КАК МОЛ,
	               |	вт_распределениеФинальное.коэфициентПоМОЛ КАК коэфициентПоМОЛ,
	               |	вт_распределениеФинальное.СуммаКНачислению КАК СуммаКНачислению,
	               |	вт_распределениеФинальное.СуммаКНачислениюНУ КАК СуммаКНачислениюНУ,
	               |	вт_распределениеФинальное.СуммаКНачислениюПР КАК СуммаКНачислениюПР,
	               |	вт_распределениеФинальное.НачисленнаяАмортизация - вт_распределеноИтого.СуммаКНачислению КАК Ошибка,
	               |	вт_распределениеФинальное.СуммаНУ - вт_распределеноИтого.СуммаКНачислениюНУ КАК ОшибкаНУ,
	               |	вт_распределениеФинальное.СуммаПР - вт_распределеноИтого.СуммаКНачислениюПР КАК ОшибкаПР
	               |ИЗ
	               |	вт_распределениеФинальное КАК вт_распределениеФинальное
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_распределеноИтого КАК вт_распределеноИтого
	               |		ПО вт_распределениеФинальное.ОсновноеСредство = вт_распределеноИтого.ОсновноеСредство";
	Запрос.УстановитьПараметр("НачалоПериода", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("счет0201", ПланыСчетов.Хозрасчетный.НайтиПоКоду("02.01"));
	Запрос.УстановитьПараметр("ОсновныеСредства", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	//Запрос.УстановитьПараметр("Сотрудники", СписокСотрудников);
	Запрос.УстановитьПараметр("Данные", Объект.ТШ.Выгрузить());
	
	
	//Итог = Запрос.Выполнить().Выгрузить();
	Объект.ТаблицаСоответствия.Загрузить(запрос.Выполнить().Выгрузить());
КонецПроцедуры

Функция ПолучитьСписокСотрудников()	
	СписокСотрудников = Новый Массив;
	Для Каждого стр Из Объект.ТШ Цикл
		СписокСотрудников.Добавить(стр.ФизическоеЛицо);	
	КонецЦикла;
	Возврат СписокСотрудников;
КонецФункции 

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ДозаполнитьНаСервере()
	
	Запрос = новый Запрос("ВЫБРАТЬ
	|	данные.фио КАК фио,
	|	данные.Проект КАК Проект,
	|	данные.Период КАК Период,
	|	данные.ПроцентРаспределения КАК ПроцентРаспределения,
	|	данные.ИдентификаторПроекта КАК ИдентификаторПроекта,
	|	данные.ТипВыставленияСчета КАК ТипВыставленияСчета
	|ПОМЕСТИТЬ вт_данные
	|ИЗ
	|	&данные КАК данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_данные.фио КАК фио,
	|	вт_данные.Проект КАК Проект,
	|	вт_данные.Период КАК Период,
	|	вт_данные.ПроцентРаспределения КАК ПроцентРаспределения,
	|	вт_данные.ИдентификаторПроекта КАК ИдентификаторПроекта,
	|	вт_данные.ТипВыставленияСчета КАК ТипВыставленияСчета,
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
	|	НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа
	|ИЗ
	|	вт_данные КАК вт_данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО вт_данные.фио = ФизическиеЛица.Наименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|		ПО вт_данные.Проект = НоменклатурныеГруппы.Наименование");
	Запрос.УстановитьПараметр("Данные", Объект.ТШ.Выгрузить());
	Объект.ТШ.Загрузить(запрос.Выполнить().Выгрузить());
	
КонецФункции // ДозаполнитьНаСервере()


&НаКлиенте
Процедура СоздатьОперацию(Команда)
	
	//Форма = ПолучитьФорму("Документ.ОперацияБух.Форма.ФормаДокумента");
	////заполним новый проект по заявке
	//Данные = форма.Объект; 
	Операция = Неопределено;
	СоздатьОперациюНаСервере(Операция);
	если Операция <> Неопределено тогда
		ОткрытьЗначение(Операция);
	КонецЕсли;
	
	//КопироватьДанныеФормы(Данные,форма.объект);
	//Форма.Открыть();
КонецПроцедуры


&НаСервере
Процедура СоздатьОперациюНаСервере(Операция)
	
	новОперация = документы.ОперацияБух.СоздатьДокумент();
	новОперация.Организация = Объект.Организация;//
	новОперация.Дата = КонецДня(Объект.Период.ДатаОкончания);
	новОперация.УстановитьНовыйНомер();
	ДвиженияХозрасчктный = новОперация.Движения.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	данные.Сотрудник КАК Сотрудник,
	|	данные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	данные.СпособОтражения КАК СпособОтражения,
	|	данные.Процент КАК Процент,
	|	данные.ОсновноеСредство КАК ОсновноеСредство,
	|	данные.НачисленнаяАмортизация КАК НачисленнаяАмортизация,
	|	данные.СчетДт КАК СчетДт,
	|	данные.СубконтоДт1 КАК СубконтоДт1,
	|	данные.СубконтоДт2 КАК СубконтоДт2,
	|	данные.СубконтоДт3 КАК СубконтоДт3,
	|	данные.Организация КАК Организация,
	|	данные.Подразделение КАК Подразделение,
	|	данные.СуммаНУ КАК СуммаНУ,
	|	данные.СуммаПР КАК СуммаПР,
	|	данные.СуммаКначислению КАК СуммаКначислению,
	|	данные.Ошибка КАК Ошибка,
	|	данные.СуммаВР КАК СуммаВР,
	|	данные.СуммаКНачислениюНУ КАК СуммаНачисленияНУ,
	|	данные.СуммаКНачислениюПР КАК СуммаНачисленияПР
	|ПОМЕСТИТЬ ВТ_данные
	|ИЗ
	|	&данные КАК данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_данные.Сотрудник КАК Сотрудник,
	|	ВТ_данные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВТ_данные.СпособОтражения КАК СпособОтражения,
	|	ВТ_данные.Процент КАК Процент,
	|	ВТ_данные.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_данные.НачисленнаяАмортизация КАК НачисленнаяАмортизация,
	|	ВТ_данные.СчетДт КАК СчетДт,
	|	ВТ_данные.СубконтоДт1 КАК СубконтоДт1,
	|	ВТ_данные.СубконтоДт2 КАК СубконтоДт2,
	|	ВТ_данные.СубконтоДт3 КАК СубконтоДт3,
	|	ВТ_данные.Организация КАК Организация,
	|	ВТ_данные.Подразделение КАК Подразделение,
	|	ВТ_данные.СуммаНУ КАК СуммаНУ,
	|	ВТ_данные.СуммаПР КАК СуммаПР,
	|	ВТ_данные.СуммаКначислению КАК СуммаКначислению,
	|	ВТ_данные.Ошибка КАК Ошибка,
	|	ВТ_данные.СуммаВР КАК СуммаВР,
	|	ВТ_данные.СуммаНачисленияНУ КАК СуммаКНачислениюНУ,
	|	ВТ_данные.СуммаНачисленияПР КАК СуммаКНачислениюПР
	|ИЗ
	|	ВТ_данные КАК ВТ_данные
	|ИТОГИ ПО
	|	ОсновноеСредство";
	Запрос.УстановитьПараметр("Данные", Объект.ТаблицаСоответствия.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОсновноеСредство = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Счет02 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("02.01");
	Пока ВыборкаОсновноеСредство.Следующий() Цикл
		// Вставить обработку выборки ВыборкаОсновноеСредство 
		
		ВыборкаДетальныеЗаписи = ВыборкаОсновноеСредство.Выбрать();
		ЭтоПерваяСтрока = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Организация) тогда
				Продолжить;
			КонецЕсли;
			

			Если ЭтоПерваяСтрока Тогда
				//тут проводка сторно
				новПРОводка = ДвиженияХозрасчктный.Добавить();
				новПРОводка.СчетДт = ВыборкаДетальныеЗаписи.счетДТ;
				новПРОводка.СчетКт = Счет02; 
				
				новПРОводка.ПодразделениеДт = ВыборкаДетальныеЗаписи.Подразделение; 
				новПРОводка.ПодразделениеКт = ВыборкаДетальныеЗаписи.Подразделение;
				БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетДт, новПРОводка.СубконтоДт, 1, ВыборкаДетальныеЗаписи.СубконтоДт1);
				БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетДт, новПРОводка.СубконтоДт, 2, ВыборкаДетальныеЗаписи.СубконтоДт2);
				
				БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетКт, новПРОводка.СубконтоКт, 1, ВыборкаДетальныеЗаписи.основноеСредство);
				
				новПРОводка.Сумма = ВыборкаДетальныеЗаписи.НачисленнаяАмортизация *-1;
				новПРОводка.СуммаНУДт =ВыборкаДетальныеЗаписи.СуммаНУ *-1 ;
				новПРОводка.СуммаНУКт =ВыборкаДетальныеЗаписи.СуммаНУ *-1;
				новПРОводка.СуммаПРДт =ВыборкаДетальныеЗаписи.СуммаПР *-1 ; 
				новПРОводка.СуммаПРКт =ВыборкаДетальныеЗаписи.СуммаПР *-1 ; 
				новПРОводка.СуммаВРДт =ВыборкаДетальныеЗаписи.СуммаВР *-1 ;  
				новПРОводка.СуммаВРКт =ВыборкаДетальныеЗаписи.СуммаВР *-1 ;  
				
				
			КонецЕсли;
			// Тут проводка распределения
			новПРОводка = ДвиженияХозрасчктный.Добавить();
			новПРОводка.СчетДт = ВыборкаДетальныеЗаписи.счетДТ;
			новПРОводка.СчетКт = Счет02;
			
			новПРОводка.ПодразделениеДт = ВыборкаДетальныеЗаписи.Подразделение; 
			новПРОводка.ПодразделениеКт = ВыборкаДетальныеЗаписи.Подразделение;
			БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетДт, новПРОводка.СубконтоДт, 1, ВыборкаДетальныеЗаписи.НоменклатурнаяГруппа);
			БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетДт, новПРОводка.СубконтоДт, 2, ВыборкаДетальныеЗаписи.СубконтоДт2);
			
			БухгалтерскийУчет.УстановитьСубконто(новПРОводка.СчетКт, новПРОводка.СубконтоКт, 1, ВыборкаДетальныеЗаписи.основноеСредство);
			Если ЭтоПерваяСтрока Тогда 
				новПРОводка.Сумма = ВыборкаДетальныеЗаписи.СуммаКначислению + ВыборкаДетальныеЗаписи.Ошибка; 
			Иначе
				новПРОводка.Сумма = ВыборкаДетальныеЗаписи.СуммаКначислению;
			КонецЕсли;
			новПРОводка.СуммаНУДт = ВыборкаДетальныеЗаписи.СуммаКНачислениюНУ;
			новПРОводка.СуммаНУКт = ВыборкаДетальныеЗаписи.СуммаКНачислениюНУ;
			новПРОводка.СуммаПРДт = ВыборкаДетальныеЗаписи.СуммаКНачислениюПР;
			новПРОводка.СуммаПРКт = ВыборкаДетальныеЗаписи.СуммаКНачислениюПР;
			новПРОводка.СуммаВРДт = новПРОводка.Сумма - новПРОводка.СуммаНУДт - новПРОводка.СуммаПРДт;
			новПРОводка.СуммаВРКт = новПРОводка.Сумма - новПРОводка.СуммаНУКт - новПРОводка.СуммаПРКт;
			
			
			ЭтоПерваяСтрока = ложь;
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;
	КонецЦикла;
	новОперация.Записать();
	ДвиженияХозрасчктный.Записать();
	Операция = новОперация.Ссылка;
	
КонецПроцедуры

